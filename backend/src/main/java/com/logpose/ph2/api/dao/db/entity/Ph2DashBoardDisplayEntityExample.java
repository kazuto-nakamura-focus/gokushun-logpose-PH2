package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.List;

public class Ph2DashBoardDisplayEntityExample {
    /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  protected String orderByClause;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  protected boolean distinct;
  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public Ph2DashBoardDisplayEntityExample() {
    oredCriteria = new ArrayList<>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  protected abstract static class GeneratedCriteria {
    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andDeviceIdIsNull() {
      addCriterion("device_id is null");
      return (Criteria) this;
    }

    public Criteria andDeviceIdIsNotNull() {
      addCriterion("device_id is not null");
      return (Criteria) this;
    }

    public Criteria andDeviceIdEqualTo(Long value) {
      addCriterion("device_id =", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdNotEqualTo(Long value) {
      addCriterion("device_id <>", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdGreaterThan(Long value) {
      addCriterion("device_id >", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdGreaterThanOrEqualTo(Long value) {
      addCriterion("device_id >=", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdLessThan(Long value) {
      addCriterion("device_id <", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdLessThanOrEqualTo(Long value) {
      addCriterion("device_id <=", value, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdIn(List<Long> values) {
      addCriterion("device_id in", values, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdNotIn(List<Long> values) {
      addCriterion("device_id not in", values, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdBetween(Long value1, Long value2) {
      addCriterion("device_id between", value1, value2, "deviceId");
      return (Criteria) this;
    }

    public Criteria andDeviceIdNotBetween(Long value1, Long value2) {
      addCriterion("device_id not between", value1, value2, "deviceId");
      return (Criteria) this;
    }

    public Criteria andIsDisplayIsNull() {
      addCriterion("is_display is null");
      return (Criteria) this;
    }

    public Criteria andIsDisplayIsNotNull() {
      addCriterion("is_display is not null");
      return (Criteria) this;
    }

    public Criteria andIsDisplayEqualTo(Boolean value) {
      addCriterion("is_display =", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayNotEqualTo(Boolean value) {
      addCriterion("is_display <>", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayGreaterThan(Boolean value) {
      addCriterion("is_display >", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayGreaterThanOrEqualTo(Boolean value) {
      addCriterion("is_display >=", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayLessThan(Boolean value) {
      addCriterion("is_display <", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayLessThanOrEqualTo(Boolean value) {
      addCriterion("is_display <=", value, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayIn(List<Boolean> values) {
      addCriterion("is_display in", values, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayNotIn(List<Boolean> values) {
      addCriterion("is_display not in", values, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayBetween(Boolean value1, Boolean value2) {
      addCriterion("is_display between", value1, value2, "isDisplay");
      return (Criteria) this;
    }

    public Criteria andIsDisplayNotBetween(Boolean value1, Boolean value2) {
      addCriterion("is_display not between", value1, value2, "isDisplay");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_dashboard_display
   * @mbg.generated
   */
  public static class Criterion {
    private String condition;
    private Object value;
    private Object secondValue;
    private boolean noValue;
    private boolean singleValue;
    private boolean betweenValue;
    private boolean listValue;
    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_dashboard_display
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}