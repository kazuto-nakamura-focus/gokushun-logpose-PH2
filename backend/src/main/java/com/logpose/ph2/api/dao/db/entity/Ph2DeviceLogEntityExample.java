package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Ph2DeviceLogEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public Ph2DeviceLogEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException("Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andDeviceIdIsNull()
			{
			addCriterion("device_id is null");
			return (Criteria) this;
			}

		public Criteria andDeviceIdIsNotNull()
			{
			addCriterion("device_id is not null");
			return (Criteria) this;
			}

		public Criteria andDeviceIdEqualTo(Long value)
			{
			addCriterion("device_id =", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotEqualTo(Long value)
			{
			addCriterion("device_id <>", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdGreaterThan(Long value)
			{
			addCriterion("device_id >", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("device_id >=", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdLessThan(Long value)
			{
			addCriterion("device_id <", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdLessThanOrEqualTo(Long value)
			{
			addCriterion("device_id <=", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdIn(List<Long> values)
			{
			addCriterion("device_id in", values, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotIn(List<Long> values)
			{
			addCriterion("device_id not in", values, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdBetween(Long value1, Long value2)
			{
			addCriterion("device_id between", value1, value2, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotBetween(Long value1, Long value2)
			{
			addCriterion("device_id not between", value1, value2, "deviceId");
			return (Criteria) this;
			}

		public Criteria andTimeIsNull()
			{
			addCriterion("time is null");
			return (Criteria) this;
			}

		public Criteria andTimeIsNotNull()
			{
			addCriterion("time is not null");
			return (Criteria) this;
			}

		public Criteria andTimeEqualTo(Date value)
			{
			addCriterion("time =", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeNotEqualTo(Date value)
			{
			addCriterion("time <>", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeGreaterThan(Date value)
			{
			addCriterion("time >", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeGreaterThanOrEqualTo(Date value)
			{
			addCriterion("time >=", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeLessThan(Date value)
			{
			addCriterion("time <", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeLessThanOrEqualTo(Date value)
			{
			addCriterion("time <=", value, "time");
			return (Criteria) this;
			}

		public Criteria andTimeIn(List<Date> values)
			{
			addCriterion("time in", values, "time");
			return (Criteria) this;
			}

		public Criteria andTimeNotIn(List<Date> values)
			{
			addCriterion("time not in", values, "time");
			return (Criteria) this;
			}

		public Criteria andTimeBetween(Date value1, Date value2)
			{
			addCriterion("time between", value1, value2, "time");
			return (Criteria) this;
			}

		public Criteria andTimeNotBetween(Date value1, Date value2)
			{
			addCriterion("time not between", value1, value2, "time");
			return (Criteria) this;
			}

		public Criteria andMessageIsNull()
			{
			addCriterion("message is null");
			return (Criteria) this;
			}

		public Criteria andMessageIsNotNull()
			{
			addCriterion("message is not null");
			return (Criteria) this;
			}

		public Criteria andMessageEqualTo(String value)
			{
			addCriterion("message =", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageNotEqualTo(String value)
			{
			addCriterion("message <>", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageGreaterThan(String value)
			{
			addCriterion("message >", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageGreaterThanOrEqualTo(String value)
			{
			addCriterion("message >=", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageLessThan(String value)
			{
			addCriterion("message <", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageLessThanOrEqualTo(String value)
			{
			addCriterion("message <=", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageLike(String value)
			{
			addCriterion("message like", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageNotLike(String value)
			{
			addCriterion("message not like", value, "message");
			return (Criteria) this;
			}

		public Criteria andMessageIn(List<String> values)
			{
			addCriterion("message in", values, "message");
			return (Criteria) this;
			}

		public Criteria andMessageNotIn(List<String> values)
			{
			addCriterion("message not in", values, "message");
			return (Criteria) this;
			}

		public Criteria andMessageBetween(String value1, String value2)
			{
			addCriterion("message between", value1, value2, "message");
			return (Criteria) this;
			}

		public Criteria andMessageNotBetween(String value1, String value2)
			{
			addCriterion("message not between", value1, value2, "message");
			return (Criteria) this;
			}

		public Criteria andClassNameIsNull()
			{
			addCriterion("class_name is null");
			return (Criteria) this;
			}

		public Criteria andClassNameIsNotNull()
			{
			addCriterion("class_name is not null");
			return (Criteria) this;
			}

		public Criteria andClassNameEqualTo(String value)
			{
			addCriterion("class_name =", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameNotEqualTo(String value)
			{
			addCriterion("class_name <>", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameGreaterThan(String value)
			{
			addCriterion("class_name >", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameGreaterThanOrEqualTo(String value)
			{
			addCriterion("class_name >=", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameLessThan(String value)
			{
			addCriterion("class_name <", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameLessThanOrEqualTo(String value)
			{
			addCriterion("class_name <=", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameLike(String value)
			{
			addCriterion("class_name like", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameNotLike(String value)
			{
			addCriterion("class_name not like", value, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameIn(List<String> values)
			{
			addCriterion("class_name in", values, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameNotIn(List<String> values)
			{
			addCriterion("class_name not in", values, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameBetween(String value1, String value2)
			{
			addCriterion("class_name between", value1, value2, "className");
			return (Criteria) this;
			}

		public Criteria andClassNameNotBetween(String value1, String value2)
			{
			addCriterion("class_name not between", value1, value2, "className");
			return (Criteria) this;
			}

		public Criteria andStatusIsNull()
			{
			addCriterion("status is null");
			return (Criteria) this;
			}

		public Criteria andStatusIsNotNull()
			{
			addCriterion("status is not null");
			return (Criteria) this;
			}

		public Criteria andStatusEqualTo(Integer value)
			{
			addCriterion("status =", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusNotEqualTo(Integer value)
			{
			addCriterion("status <>", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusGreaterThan(Integer value)
			{
			addCriterion("status >", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value)
			{
			addCriterion("status >=", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusLessThan(Integer value)
			{
			addCriterion("status <", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusLessThanOrEqualTo(Integer value)
			{
			addCriterion("status <=", value, "status");
			return (Criteria) this;
			}

		public Criteria andStatusIn(List<Integer> values)
			{
			addCriterion("status in", values, "status");
			return (Criteria) this;
			}

		public Criteria andStatusNotIn(List<Integer> values)
			{
			addCriterion("status not in", values, "status");
			return (Criteria) this;
			}

		public Criteria andStatusBetween(Integer value1, Integer value2)
			{
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
			}

		public Criteria andStatusNotBetween(Integer value1, Integer value2)
			{
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
			}

		public Criteria andModeIsNull()
			{
			addCriterion("mode is null");
			return (Criteria) this;
			}

		public Criteria andModeIsNotNull()
			{
			addCriterion("mode is not null");
			return (Criteria) this;
			}

		public Criteria andModeEqualTo(Short value)
			{
			addCriterion("mode =", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeNotEqualTo(Short value)
			{
			addCriterion("mode <>", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeGreaterThan(Short value)
			{
			addCriterion("mode >", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeGreaterThanOrEqualTo(Short value)
			{
			addCriterion("mode >=", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeLessThan(Short value)
			{
			addCriterion("mode <", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeLessThanOrEqualTo(Short value)
			{
			addCriterion("mode <=", value, "mode");
			return (Criteria) this;
			}

		public Criteria andModeIn(List<Short> values)
			{
			addCriterion("mode in", values, "mode");
			return (Criteria) this;
			}

		public Criteria andModeNotIn(List<Short> values)
			{
			addCriterion("mode not in", values, "mode");
			return (Criteria) this;
			}

		public Criteria andModeBetween(Short value1, Short value2)
			{
			addCriterion("mode between", value1, value2, "mode");
			return (Criteria) this;
			}

		public Criteria andModeNotBetween(Short value1, Short value2)
			{
			addCriterion("mode not between", value1, value2, "mode");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_device_log
	 * @mbg.generated
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_device_log
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}