package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Ph2FieldsEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public Ph2FieldsEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException(
						"Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value,
				String property)
			{
			if (value == null)
				{
				throw new RuntimeException(
						"Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException(
						"Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andIdIsNull()
			{
			addCriterion("id is null");
			return (Criteria) this;
			}

		public Criteria andIdIsNotNull()
			{
			addCriterion("id is not null");
			return (Criteria) this;
			}

		public Criteria andIdEqualTo(Long value)
			{
			addCriterion("id =", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotEqualTo(Long value)
			{
			addCriterion("id <>", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThan(Long value)
			{
			addCriterion("id >", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("id >=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThan(Long value)
			{
			addCriterion("id <", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThanOrEqualTo(Long value)
			{
			addCriterion("id <=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdIn(List<Long> values)
			{
			addCriterion("id in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotIn(List<Long> values)
			{
			addCriterion("id not in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdBetween(Long value1, Long value2)
			{
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotBetween(Long value1, Long value2)
			{
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andNameIsNull()
			{
			addCriterion("name is null");
			return (Criteria) this;
			}

		public Criteria andNameIsNotNull()
			{
			addCriterion("name is not null");
			return (Criteria) this;
			}

		public Criteria andNameEqualTo(String value)
			{
			addCriterion("name =", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameNotEqualTo(String value)
			{
			addCriterion("name <>", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameGreaterThan(String value)
			{
			addCriterion("name >", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameGreaterThanOrEqualTo(String value)
			{
			addCriterion("name >=", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameLessThan(String value)
			{
			addCriterion("name <", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameLessThanOrEqualTo(String value)
			{
			addCriterion("name <=", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameLike(String value)
			{
			addCriterion("name like", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameNotLike(String value)
			{
			addCriterion("name not like", value, "name");
			return (Criteria) this;
			}

		public Criteria andNameIn(List<String> values)
			{
			addCriterion("name in", values, "name");
			return (Criteria) this;
			}

		public Criteria andNameNotIn(List<String> values)
			{
			addCriterion("name not in", values, "name");
			return (Criteria) this;
			}

		public Criteria andNameBetween(String value1, String value2)
			{
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
			}

		public Criteria andNameNotBetween(String value1, String value2)
			{
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
			}

		public Criteria andLocationIsNull()
			{
			addCriterion("location is null");
			return (Criteria) this;
			}

		public Criteria andLocationIsNotNull()
			{
			addCriterion("location is not null");
			return (Criteria) this;
			}

		public Criteria andLocationEqualTo(String value)
			{
			addCriterion("location =", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationNotEqualTo(String value)
			{
			addCriterion("location <>", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationGreaterThan(String value)
			{
			addCriterion("location >", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationGreaterThanOrEqualTo(String value)
			{
			addCriterion("location >=", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationLessThan(String value)
			{
			addCriterion("location <", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationLessThanOrEqualTo(String value)
			{
			addCriterion("location <=", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationLike(String value)
			{
			addCriterion("location like", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationNotLike(String value)
			{
			addCriterion("location not like", value, "location");
			return (Criteria) this;
			}

		public Criteria andLocationIn(List<String> values)
			{
			addCriterion("location in", values, "location");
			return (Criteria) this;
			}

		public Criteria andLocationNotIn(List<String> values)
			{
			addCriterion("location not in", values, "location");
			return (Criteria) this;
			}

		public Criteria andLocationBetween(String value1, String value2)
			{
			addCriterion("location between", value1, value2, "location");
			return (Criteria) this;
			}

		public Criteria andLocationNotBetween(String value1, String value2)
			{
			addCriterion("location not between", value1, value2, "location");
			return (Criteria) this;
			}

		public Criteria andLatitudeIsNull()
			{
			addCriterion("latitude is null");
			return (Criteria) this;
			}

		public Criteria andLatitudeIsNotNull()
			{
			addCriterion("latitude is not null");
			return (Criteria) this;
			}

		public Criteria andLatitudeEqualTo(Double value)
			{
			addCriterion("latitude =", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeNotEqualTo(Double value)
			{
			addCriterion("latitude <>", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeGreaterThan(Double value)
			{
			addCriterion("latitude >", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeGreaterThanOrEqualTo(Double value)
			{
			addCriterion("latitude >=", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeLessThan(Double value)
			{
			addCriterion("latitude <", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeLessThanOrEqualTo(Double value)
			{
			addCriterion("latitude <=", value, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeIn(List<Double> values)
			{
			addCriterion("latitude in", values, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeNotIn(List<Double> values)
			{
			addCriterion("latitude not in", values, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeBetween(Double value1, Double value2)
			{
			addCriterion("latitude between", value1, value2, "latitude");
			return (Criteria) this;
			}

		public Criteria andLatitudeNotBetween(Double value1, Double value2)
			{
			addCriterion("latitude not between", value1, value2, "latitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeIsNull()
			{
			addCriterion("longitude is null");
			return (Criteria) this;
			}

		public Criteria andLongitudeIsNotNull()
			{
			addCriterion("longitude is not null");
			return (Criteria) this;
			}

		public Criteria andLongitudeEqualTo(Double value)
			{
			addCriterion("longitude =", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeNotEqualTo(Double value)
			{
			addCriterion("longitude <>", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeGreaterThan(Double value)
			{
			addCriterion("longitude >", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeGreaterThanOrEqualTo(Double value)
			{
			addCriterion("longitude >=", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeLessThan(Double value)
			{
			addCriterion("longitude <", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeLessThanOrEqualTo(Double value)
			{
			addCriterion("longitude <=", value, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeIn(List<Double> values)
			{
			addCriterion("longitude in", values, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeNotIn(List<Double> values)
			{
			addCriterion("longitude not in", values, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeBetween(Double value1, Double value2)
			{
			addCriterion("longitude between", value1, value2, "longitude");
			return (Criteria) this;
			}

		public Criteria andLongitudeNotBetween(Double value1, Double value2)
			{
			addCriterion("longitude not between", value1, value2, "longitude");
			return (Criteria) this;
			}

		public Criteria andClientIsNull()
			{
			addCriterion("client is null");
			return (Criteria) this;
			}

		public Criteria andClientIsNotNull()
			{
			addCriterion("client is not null");
			return (Criteria) this;
			}

		public Criteria andClientEqualTo(String value)
			{
			addCriterion("client =", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientNotEqualTo(String value)
			{
			addCriterion("client <>", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientGreaterThan(String value)
			{
			addCriterion("client >", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientGreaterThanOrEqualTo(String value)
			{
			addCriterion("client >=", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientLessThan(String value)
			{
			addCriterion("client <", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientLessThanOrEqualTo(String value)
			{
			addCriterion("client <=", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientLike(String value)
			{
			addCriterion("client like", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientNotLike(String value)
			{
			addCriterion("client not like", value, "client");
			return (Criteria) this;
			}

		public Criteria andClientIn(List<String> values)
			{
			addCriterion("client in", values, "client");
			return (Criteria) this;
			}

		public Criteria andClientNotIn(List<String> values)
			{
			addCriterion("client not in", values, "client");
			return (Criteria) this;
			}

		public Criteria andClientBetween(String value1, String value2)
			{
			addCriterion("client between", value1, value2, "client");
			return (Criteria) this;
			}

		public Criteria andClientNotBetween(String value1, String value2)
			{
			addCriterion("client not between", value1, value2, "client");
			return (Criteria) this;
			}

		public Criteria andCommenceDateIsNull()
			{
			addCriterion("commence_date is null");
			return (Criteria) this;
			}

		public Criteria andCommenceDateIsNotNull()
			{
			addCriterion("commence_date is not null");
			return (Criteria) this;
			}

		public Criteria andCommenceDateEqualTo(String value)
			{
			addCriterion("commence_date =", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateNotEqualTo(String value)
			{
			addCriterion("commence_date <>", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateGreaterThan(String value)
			{
			addCriterion("commence_date >", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateGreaterThanOrEqualTo(String value)
			{
			addCriterion("commence_date >=", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateLessThan(String value)
			{
			addCriterion("commence_date <", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateLessThanOrEqualTo(String value)
			{
			addCriterion("commence_date <=", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateLike(String value)
			{
			addCriterion("commence_date like", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateNotLike(String value)
			{
			addCriterion("commence_date not like", value, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateIn(List<String> values)
			{
			addCriterion("commence_date in", values, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateNotIn(List<String> values)
			{
			addCriterion("commence_date not in", values, "commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateBetween(String value1, String value2)
			{
			addCriterion("commence_date between", value1, value2,
					"commenceDate");
			return (Criteria) this;
			}

		public Criteria andCommenceDateNotBetween(String value1, String value2)
			{
			addCriterion("commence_date not between", value1, value2,
					"commenceDate");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNull()
			{
			addCriterion("created_at is null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNotNull()
			{
			addCriterion("created_at is not null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtEqualTo(Date value)
			{
			addCriterion("created_at =", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotEqualTo(Date value)
			{
			addCriterion("created_at <>", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThan(Date value)
			{
			addCriterion("created_at >", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("created_at >=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThan(Date value)
			{
			addCriterion("created_at <", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("created_at <=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIn(List<Date> values)
			{
			addCriterion("created_at in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotIn(List<Date> values)
			{
			addCriterion("created_at not in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtBetween(Date value1, Date value2)
			{
			addCriterion("created_at between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("created_at not between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNull()
			{
			addCriterion("updated_at is null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNotNull()
			{
			addCriterion("updated_at is not null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtEqualTo(Date value)
			{
			addCriterion("updated_at =", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotEqualTo(Date value)
			{
			addCriterion("updated_at <>", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThan(Date value)
			{
			addCriterion("updated_at >", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("updated_at >=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThan(Date value)
			{
			addCriterion("updated_at <", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("updated_at <=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIn(List<Date> values)
			{
			addCriterion("updated_at in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotIn(List<Date> values)
			{
			addCriterion("updated_at not in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtBetween(Date value1, Date value2)
			{
			addCriterion("updated_at between", value1, value2, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("updated_at not between", value1, value2, "updatedAt");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_fields
	 * @mbg.generated  Wed Aug 02 13:44:57 JST 2023
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_fields
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 03 16:39:57 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}