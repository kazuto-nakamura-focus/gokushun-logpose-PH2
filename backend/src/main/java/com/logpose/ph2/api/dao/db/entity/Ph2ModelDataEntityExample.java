package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class Ph2ModelDataEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public Ph2ModelDataEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException(
						"Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value,
				String property)
			{
			if (value == null)
				{
				throw new RuntimeException(
						"Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException(
						"Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andDayIdIsNull()
			{
			addCriterion("day_id is null");
			return (Criteria) this;
			}

		public Criteria andDayIdIsNotNull()
			{
			addCriterion("day_id is not null");
			return (Criteria) this;
			}

		public Criteria andDayIdEqualTo(Long value)
			{
			addCriterion("day_id =", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdNotEqualTo(Long value)
			{
			addCriterion("day_id <>", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdGreaterThan(Long value)
			{
			addCriterion("day_id >", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("day_id >=", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdLessThan(Long value)
			{
			addCriterion("day_id <", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdLessThanOrEqualTo(Long value)
			{
			addCriterion("day_id <=", value, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdIn(List<Long> values)
			{
			addCriterion("day_id in", values, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdNotIn(List<Long> values)
			{
			addCriterion("day_id not in", values, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdBetween(Long value1, Long value2)
			{
			addCriterion("day_id between", value1, value2, "dayId");
			return (Criteria) this;
			}

		public Criteria andDayIdNotBetween(Long value1, Long value2)
			{
			addCriterion("day_id not between", value1, value2, "dayId");
			return (Criteria) this;
			}

		public Criteria andFValueIsNull()
			{
			addCriterion("f_value is null");
			return (Criteria) this;
			}

		public Criteria andFValueIsNotNull()
			{
			addCriterion("f_value is not null");
			return (Criteria) this;
			}

		public Criteria andFValueEqualTo(Double value)
			{
			addCriterion("f_value =", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueNotEqualTo(Double value)
			{
			addCriterion("f_value <>", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueGreaterThan(Double value)
			{
			addCriterion("f_value >", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueGreaterThanOrEqualTo(Double value)
			{
			addCriterion("f_value >=", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueLessThan(Double value)
			{
			addCriterion("f_value <", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueLessThanOrEqualTo(Double value)
			{
			addCriterion("f_value <=", value, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueIn(List<Double> values)
			{
			addCriterion("f_value in", values, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueNotIn(List<Double> values)
			{
			addCriterion("f_value not in", values, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueBetween(Double value1, Double value2)
			{
			addCriterion("f_value between", value1, value2, "fValue");
			return (Criteria) this;
			}

		public Criteria andFValueNotBetween(Double value1, Double value2)
			{
			addCriterion("f_value not between", value1, value2, "fValue");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsIsNull()
			{
			addCriterion("culmitive_cnopy_ps is null");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsIsNotNull()
			{
			addCriterion("culmitive_cnopy_ps is not null");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsEqualTo(Double value)
			{
			addCriterion("culmitive_cnopy_ps =", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsNotEqualTo(Double value)
			{
			addCriterion("culmitive_cnopy_ps <>", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsGreaterThan(Double value)
			{
			addCriterion("culmitive_cnopy_ps >", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsGreaterThanOrEqualTo(Double value)
			{
			addCriterion("culmitive_cnopy_ps >=", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsLessThan(Double value)
			{
			addCriterion("culmitive_cnopy_ps <", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsLessThanOrEqualTo(Double value)
			{
			addCriterion("culmitive_cnopy_ps <=", value, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsIn(List<Double> values)
			{
			addCriterion("culmitive_cnopy_ps in", values, "culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsNotIn(List<Double> values)
			{
			addCriterion("culmitive_cnopy_ps not in", values,
					"culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsBetween(Double value1, Double value2)
			{
			addCriterion("culmitive_cnopy_ps between", value1, value2,
					"culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCulmitiveCnopyPsNotBetween(Double value1,
				Double value2)
			{
			addCriterion("culmitive_cnopy_ps not between", value1, value2,
					"culmitiveCnopyPs");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaIsNull()
			{
			addCriterion("crown_leaf_area is null");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaIsNotNull()
			{
			addCriterion("crown_leaf_area is not null");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaEqualTo(Double value)
			{
			addCriterion("crown_leaf_area =", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaNotEqualTo(Double value)
			{
			addCriterion("crown_leaf_area <>", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaGreaterThan(Double value)
			{
			addCriterion("crown_leaf_area >", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaGreaterThanOrEqualTo(Double value)
			{
			addCriterion("crown_leaf_area >=", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaLessThan(Double value)
			{
			addCriterion("crown_leaf_area <", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaLessThanOrEqualTo(Double value)
			{
			addCriterion("crown_leaf_area <=", value, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaIn(List<Double> values)
			{
			addCriterion("crown_leaf_area in", values, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaNotIn(List<Double> values)
			{
			addCriterion("crown_leaf_area not in", values, "crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaBetween(Double value1, Double value2)
			{
			addCriterion("crown_leaf_area between", value1, value2,
					"crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andCrownLeafAreaNotBetween(Double value1, Double value2)
			{
			addCriterion("crown_leaf_area not between", value1, value2,
					"crownLeafArea");
			return (Criteria) this;
			}

		public Criteria andLeafCountIsNull()
			{
			addCriterion("leaf_count is null");
			return (Criteria) this;
			}

		public Criteria andLeafCountIsNotNull()
			{
			addCriterion("leaf_count is not null");
			return (Criteria) this;
			}

		public Criteria andLeafCountEqualTo(Double value)
			{
			addCriterion("leaf_count =", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountNotEqualTo(Double value)
			{
			addCriterion("leaf_count <>", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountGreaterThan(Double value)
			{
			addCriterion("leaf_count >", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountGreaterThanOrEqualTo(Double value)
			{
			addCriterion("leaf_count >=", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountLessThan(Double value)
			{
			addCriterion("leaf_count <", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountLessThanOrEqualTo(Double value)
			{
			addCriterion("leaf_count <=", value, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountIn(List<Double> values)
			{
			addCriterion("leaf_count in", values, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountNotIn(List<Double> values)
			{
			addCriterion("leaf_count not in", values, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountBetween(Double value1, Double value2)
			{
			addCriterion("leaf_count between", value1, value2, "leafCount");
			return (Criteria) this;
			}

		public Criteria andLeafCountNotBetween(Double value1, Double value2)
			{
			addCriterion("leaf_count not between", value1, value2, "leafCount");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_model_data
	 * @mbg.generated  Mon Jul 31 11:01:17 JST 2023
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_model_data
     *
     * @mbg.generated do_not_delete_during_merge Thu Jul 06 06:11:31 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}