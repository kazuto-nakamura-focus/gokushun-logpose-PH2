package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Ph2OauthEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public Ph2OauthEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException("Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andUserIdIsNull()
			{
			addCriterion("user_id is null");
			return (Criteria) this;
			}

		public Criteria andUserIdIsNotNull()
			{
			addCriterion("user_id is not null");
			return (Criteria) this;
			}

		public Criteria andUserIdEqualTo(String value)
			{
			addCriterion("user_id =", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdNotEqualTo(String value)
			{
			addCriterion("user_id <>", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdGreaterThan(String value)
			{
			addCriterion("user_id >", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdGreaterThanOrEqualTo(String value)
			{
			addCriterion("user_id >=", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdLessThan(String value)
			{
			addCriterion("user_id <", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdLessThanOrEqualTo(String value)
			{
			addCriterion("user_id <=", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdLike(String value)
			{
			addCriterion("user_id like", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdNotLike(String value)
			{
			addCriterion("user_id not like", value, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdIn(List<String> values)
			{
			addCriterion("user_id in", values, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdNotIn(List<String> values)
			{
			addCriterion("user_id not in", values, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdBetween(String value1, String value2)
			{
			addCriterion("user_id between", value1, value2, "userId");
			return (Criteria) this;
			}

		public Criteria andUserIdNotBetween(String value1, String value2)
			{
			addCriterion("user_id not between", value1, value2, "userId");
			return (Criteria) this;
			}

		public Criteria andTokenIsNull()
			{
			addCriterion("token is null");
			return (Criteria) this;
			}

		public Criteria andTokenIsNotNull()
			{
			addCriterion("token is not null");
			return (Criteria) this;
			}

		public Criteria andTokenEqualTo(String value)
			{
			addCriterion("token =", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenNotEqualTo(String value)
			{
			addCriterion("token <>", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenGreaterThan(String value)
			{
			addCriterion("token >", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenGreaterThanOrEqualTo(String value)
			{
			addCriterion("token >=", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenLessThan(String value)
			{
			addCriterion("token <", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenLessThanOrEqualTo(String value)
			{
			addCriterion("token <=", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenLike(String value)
			{
			addCriterion("token like", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenNotLike(String value)
			{
			addCriterion("token not like", value, "token");
			return (Criteria) this;
			}

		public Criteria andTokenIn(List<String> values)
			{
			addCriterion("token in", values, "token");
			return (Criteria) this;
			}

		public Criteria andTokenNotIn(List<String> values)
			{
			addCriterion("token not in", values, "token");
			return (Criteria) this;
			}

		public Criteria andTokenBetween(String value1, String value2)
			{
			addCriterion("token between", value1, value2, "token");
			return (Criteria) this;
			}

		public Criteria andTokenNotBetween(String value1, String value2)
			{
			addCriterion("token not between", value1, value2, "token");
			return (Criteria) this;
			}

		public Criteria andLoadTimeIsNull()
			{
			addCriterion("load_time is null");
			return (Criteria) this;
			}

		public Criteria andLoadTimeIsNotNull()
			{
			addCriterion("load_time is not null");
			return (Criteria) this;
			}

		public Criteria andLoadTimeEqualTo(Date value)
			{
			addCriterion("load_time =", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeNotEqualTo(Date value)
			{
			addCriterion("load_time <>", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeGreaterThan(Date value)
			{
			addCriterion("load_time >", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeGreaterThanOrEqualTo(Date value)
			{
			addCriterion("load_time >=", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeLessThan(Date value)
			{
			addCriterion("load_time <", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeLessThanOrEqualTo(Date value)
			{
			addCriterion("load_time <=", value, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeIn(List<Date> values)
			{
			addCriterion("load_time in", values, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeNotIn(List<Date> values)
			{
			addCriterion("load_time not in", values, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeBetween(Date value1, Date value2)
			{
			addCriterion("load_time between", value1, value2, "loadTime");
			return (Criteria) this;
			}

		public Criteria andLoadTimeNotBetween(Date value1, Date value2)
			{
			addCriterion("load_time not between", value1, value2, "loadTime");
			return (Criteria) this;
			}

		public Criteria andExpiresInIsNull()
			{
			addCriterion("expires_in is null");
			return (Criteria) this;
			}

		public Criteria andExpiresInIsNotNull()
			{
			addCriterion("expires_in is not null");
			return (Criteria) this;
			}

		public Criteria andExpiresInEqualTo(Long value)
			{
			addCriterion("expires_in =", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInNotEqualTo(Long value)
			{
			addCriterion("expires_in <>", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInGreaterThan(Long value)
			{
			addCriterion("expires_in >", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInGreaterThanOrEqualTo(Long value)
			{
			addCriterion("expires_in >=", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInLessThan(Long value)
			{
			addCriterion("expires_in <", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInLessThanOrEqualTo(Long value)
			{
			addCriterion("expires_in <=", value, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInIn(List<Long> values)
			{
			addCriterion("expires_in in", values, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInNotIn(List<Long> values)
			{
			addCriterion("expires_in not in", values, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInBetween(Long value1, Long value2)
			{
			addCriterion("expires_in between", value1, value2, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andExpiresInNotBetween(Long value1, Long value2)
			{
			addCriterion("expires_in not between", value1, value2, "expiresIn");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenIsNull()
			{
			addCriterion("refresh_token is null");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenIsNotNull()
			{
			addCriterion("refresh_token is not null");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenEqualTo(String value)
			{
			addCriterion("refresh_token =", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenNotEqualTo(String value)
			{
			addCriterion("refresh_token <>", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenGreaterThan(String value)
			{
			addCriterion("refresh_token >", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenGreaterThanOrEqualTo(String value)
			{
			addCriterion("refresh_token >=", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenLessThan(String value)
			{
			addCriterion("refresh_token <", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenLessThanOrEqualTo(String value)
			{
			addCriterion("refresh_token <=", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenLike(String value)
			{
			addCriterion("refresh_token like", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenNotLike(String value)
			{
			addCriterion("refresh_token not like", value, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenIn(List<String> values)
			{
			addCriterion("refresh_token in", values, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenNotIn(List<String> values)
			{
			addCriterion("refresh_token not in", values, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenBetween(String value1, String value2)
			{
			addCriterion("refresh_token between", value1, value2, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andRefreshTokenNotBetween(String value1, String value2)
			{
			addCriterion("refresh_token not between", value1, value2, "refreshToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenIsNull()
			{
			addCriterion("access_token is null");
			return (Criteria) this;
			}

		public Criteria andAccessTokenIsNotNull()
			{
			addCriterion("access_token is not null");
			return (Criteria) this;
			}

		public Criteria andAccessTokenEqualTo(String value)
			{
			addCriterion("access_token =", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenNotEqualTo(String value)
			{
			addCriterion("access_token <>", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenGreaterThan(String value)
			{
			addCriterion("access_token >", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenGreaterThanOrEqualTo(String value)
			{
			addCriterion("access_token >=", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenLessThan(String value)
			{
			addCriterion("access_token <", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenLessThanOrEqualTo(String value)
			{
			addCriterion("access_token <=", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenLike(String value)
			{
			addCriterion("access_token like", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenNotLike(String value)
			{
			addCriterion("access_token not like", value, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenIn(List<String> values)
			{
			addCriterion("access_token in", values, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenNotIn(List<String> values)
			{
			addCriterion("access_token not in", values, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenBetween(String value1, String value2)
			{
			addCriterion("access_token between", value1, value2, "accessToken");
			return (Criteria) this;
			}

		public Criteria andAccessTokenNotBetween(String value1, String value2)
			{
			addCriterion("access_token not between", value1, value2, "accessToken");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveIsNull()
			{
			addCriterion("is_effective is null");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveIsNotNull()
			{
			addCriterion("is_effective is not null");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveEqualTo(Boolean value)
			{
			addCriterion("is_effective =", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveNotEqualTo(Boolean value)
			{
			addCriterion("is_effective <>", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveGreaterThan(Boolean value)
			{
			addCriterion("is_effective >", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveGreaterThanOrEqualTo(Boolean value)
			{
			addCriterion("is_effective >=", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveLessThan(Boolean value)
			{
			addCriterion("is_effective <", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveLessThanOrEqualTo(Boolean value)
			{
			addCriterion("is_effective <=", value, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveIn(List<Boolean> values)
			{
			addCriterion("is_effective in", values, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveNotIn(List<Boolean> values)
			{
			addCriterion("is_effective not in", values, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveBetween(Boolean value1, Boolean value2)
			{
			addCriterion("is_effective between", value1, value2, "isEffective");
			return (Criteria) this;
			}

		public Criteria andIsEffectiveNotBetween(Boolean value1, Boolean value2)
			{
			addCriterion("is_effective not between", value1, value2, "isEffective");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_oauth
	 * @mbg.generated
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_oauth
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}