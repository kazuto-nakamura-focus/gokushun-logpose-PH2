package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class Ph2ParamsetPsFieldEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public Ph2ParamsetPsFieldEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException("Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andParamsetIdIsNull()
			{
			addCriterion("paramset_id is null");
			return (Criteria) this;
			}

		public Criteria andParamsetIdIsNotNull()
			{
			addCriterion("paramset_id is not null");
			return (Criteria) this;
			}

		public Criteria andParamsetIdEqualTo(Long value)
			{
			addCriterion("paramset_id =", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdNotEqualTo(Long value)
			{
			addCriterion("paramset_id <>", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdGreaterThan(Long value)
			{
			addCriterion("paramset_id >", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("paramset_id >=", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdLessThan(Long value)
			{
			addCriterion("paramset_id <", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdLessThanOrEqualTo(Long value)
			{
			addCriterion("paramset_id <=", value, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdIn(List<Long> values)
			{
			addCriterion("paramset_id in", values, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdNotIn(List<Long> values)
			{
			addCriterion("paramset_id not in", values, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdBetween(Long value1, Long value2)
			{
			addCriterion("paramset_id between", value1, value2, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andParamsetIdNotBetween(Long value1, Long value2)
			{
			addCriterion("paramset_id not between", value1, value2, "paramsetId");
			return (Criteria) this;
			}

		public Criteria andValueFIsNull()
			{
			addCriterion("value_f is null");
			return (Criteria) this;
			}

		public Criteria andValueFIsNotNull()
			{
			addCriterion("value_f is not null");
			return (Criteria) this;
			}

		public Criteria andValueFEqualTo(Double value)
			{
			addCriterion("value_f =", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFNotEqualTo(Double value)
			{
			addCriterion("value_f <>", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFGreaterThan(Double value)
			{
			addCriterion("value_f >", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFGreaterThanOrEqualTo(Double value)
			{
			addCriterion("value_f >=", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFLessThan(Double value)
			{
			addCriterion("value_f <", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFLessThanOrEqualTo(Double value)
			{
			addCriterion("value_f <=", value, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFIn(List<Double> values)
			{
			addCriterion("value_f in", values, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFNotIn(List<Double> values)
			{
			addCriterion("value_f not in", values, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFBetween(Double value1, Double value2)
			{
			addCriterion("value_f between", value1, value2, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueFNotBetween(Double value1, Double value2)
			{
			addCriterion("value_f not between", value1, value2, "valueF");
			return (Criteria) this;
			}

		public Criteria andValueGIsNull()
			{
			addCriterion("value_g is null");
			return (Criteria) this;
			}

		public Criteria andValueGIsNotNull()
			{
			addCriterion("value_g is not null");
			return (Criteria) this;
			}

		public Criteria andValueGEqualTo(Double value)
			{
			addCriterion("value_g =", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGNotEqualTo(Double value)
			{
			addCriterion("value_g <>", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGGreaterThan(Double value)
			{
			addCriterion("value_g >", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGGreaterThanOrEqualTo(Double value)
			{
			addCriterion("value_g >=", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGLessThan(Double value)
			{
			addCriterion("value_g <", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGLessThanOrEqualTo(Double value)
			{
			addCriterion("value_g <=", value, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGIn(List<Double> values)
			{
			addCriterion("value_g in", values, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGNotIn(List<Double> values)
			{
			addCriterion("value_g not in", values, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGBetween(Double value1, Double value2)
			{
			addCriterion("value_g between", value1, value2, "valueG");
			return (Criteria) this;
			}

		public Criteria andValueGNotBetween(Double value1, Double value2)
			{
			addCriterion("value_g not between", value1, value2, "valueG");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNull()
			{
			addCriterion("created_at is null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNotNull()
			{
			addCriterion("created_at is not null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtEqualTo(Date value)
			{
			addCriterion("created_at =", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotEqualTo(Date value)
			{
			addCriterion("created_at <>", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThan(Date value)
			{
			addCriterion("created_at >", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("created_at >=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThan(Date value)
			{
			addCriterion("created_at <", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("created_at <=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIn(List<Date> values)
			{
			addCriterion("created_at in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotIn(List<Date> values)
			{
			addCriterion("created_at not in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtBetween(Date value1, Date value2)
			{
			addCriterion("created_at between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("created_at not between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNull()
			{
			addCriterion("updated_at is null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNotNull()
			{
			addCriterion("updated_at is not null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtEqualTo(Date value)
			{
			addCriterion("updated_at =", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotEqualTo(Date value)
			{
			addCriterion("updated_at <>", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThan(Date value)
			{
			addCriterion("updated_at >", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("updated_at >=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThan(Date value)
			{
			addCriterion("updated_at <", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("updated_at <=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIn(List<Date> values)
			{
			addCriterion("updated_at in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotIn(List<Date> values)
			{
			addCriterion("updated_at not in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtBetween(Date value1, Date value2)
			{
			addCriterion("updated_at between", value1, value2, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("updated_at not between", value1, value2, "updatedAt");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_paramset_ps_field
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_paramset_ps_field
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 03 16:41:24 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}