package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Iterator;

public class Ph2RealGrowthFStageEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public Ph2RealGrowthFStageEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException("Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		protected void addCriterionForJDBCDate(String condition, Date value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
			}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property)
			{
			if (values == null || values.size() == 0)
				{
				throw new RuntimeException(
						"Value list for " + property + " cannot be null or empty");
				}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext())
				{
				dateList.add(new java.sql.Date(iter.next().getTime()));
				}
			addCriterion(condition, dateList, property);
			}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2,
				String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
			}

		public Criteria andIdIsNull()
			{
			addCriterion("id is null");
			return (Criteria) this;
			}

		public Criteria andIdIsNotNull()
			{
			addCriterion("id is not null");
			return (Criteria) this;
			}

		public Criteria andIdEqualTo(Long value)
			{
			addCriterion("id =", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotEqualTo(Long value)
			{
			addCriterion("id <>", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThan(Long value)
			{
			addCriterion("id >", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("id >=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThan(Long value)
			{
			addCriterion("id <", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThanOrEqualTo(Long value)
			{
			addCriterion("id <=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdIn(List<Long> values)
			{
			addCriterion("id in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotIn(List<Long> values)
			{
			addCriterion("id not in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdBetween(Long value1, Long value2)
			{
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotBetween(Long value1, Long value2)
			{
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andDeviceIdIsNull()
			{
			addCriterion("device_id is null");
			return (Criteria) this;
			}

		public Criteria andDeviceIdIsNotNull()
			{
			addCriterion("device_id is not null");
			return (Criteria) this;
			}

		public Criteria andDeviceIdEqualTo(Long value)
			{
			addCriterion("device_id =", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotEqualTo(Long value)
			{
			addCriterion("device_id <>", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdGreaterThan(Long value)
			{
			addCriterion("device_id >", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("device_id >=", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdLessThan(Long value)
			{
			addCriterion("device_id <", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdLessThanOrEqualTo(Long value)
			{
			addCriterion("device_id <=", value, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdIn(List<Long> values)
			{
			addCriterion("device_id in", values, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotIn(List<Long> values)
			{
			addCriterion("device_id not in", values, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdBetween(Long value1, Long value2)
			{
			addCriterion("device_id between", value1, value2, "deviceId");
			return (Criteria) this;
			}

		public Criteria andDeviceIdNotBetween(Long value1, Long value2)
			{
			addCriterion("device_id not between", value1, value2, "deviceId");
			return (Criteria) this;
			}

		public Criteria andYearIsNull()
			{
			addCriterion("year is null");
			return (Criteria) this;
			}

		public Criteria andYearIsNotNull()
			{
			addCriterion("year is not null");
			return (Criteria) this;
			}

		public Criteria andYearEqualTo(Short value)
			{
			addCriterion("year =", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearNotEqualTo(Short value)
			{
			addCriterion("year <>", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearGreaterThan(Short value)
			{
			addCriterion("year >", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearGreaterThanOrEqualTo(Short value)
			{
			addCriterion("year >=", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearLessThan(Short value)
			{
			addCriterion("year <", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearLessThanOrEqualTo(Short value)
			{
			addCriterion("year <=", value, "year");
			return (Criteria) this;
			}

		public Criteria andYearIn(List<Short> values)
			{
			addCriterion("year in", values, "year");
			return (Criteria) this;
			}

		public Criteria andYearNotIn(List<Short> values)
			{
			addCriterion("year not in", values, "year");
			return (Criteria) this;
			}

		public Criteria andYearBetween(Short value1, Short value2)
			{
			addCriterion("year between", value1, value2, "year");
			return (Criteria) this;
			}

		public Criteria andYearNotBetween(Short value1, Short value2)
			{
			addCriterion("year not between", value1, value2, "year");
			return (Criteria) this;
			}

		public Criteria andStageNameIsNull()
			{
			addCriterion("stage_name is null");
			return (Criteria) this;
			}

		public Criteria andStageNameIsNotNull()
			{
			addCriterion("stage_name is not null");
			return (Criteria) this;
			}

		public Criteria andStageNameEqualTo(String value)
			{
			addCriterion("stage_name =", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameNotEqualTo(String value)
			{
			addCriterion("stage_name <>", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameGreaterThan(String value)
			{
			addCriterion("stage_name >", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameGreaterThanOrEqualTo(String value)
			{
			addCriterion("stage_name >=", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameLessThan(String value)
			{
			addCriterion("stage_name <", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameLessThanOrEqualTo(String value)
			{
			addCriterion("stage_name <=", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameLike(String value)
			{
			addCriterion("stage_name like", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameNotLike(String value)
			{
			addCriterion("stage_name not like", value, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameIn(List<String> values)
			{
			addCriterion("stage_name in", values, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameNotIn(List<String> values)
			{
			addCriterion("stage_name not in", values, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameBetween(String value1, String value2)
			{
			addCriterion("stage_name between", value1, value2, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageNameNotBetween(String value1, String value2)
			{
			addCriterion("stage_name not between", value1, value2, "stageName");
			return (Criteria) this;
			}

		public Criteria andStageStartIsNull()
			{
			addCriterion("stage_start is null");
			return (Criteria) this;
			}

		public Criteria andStageStartIsNotNull()
			{
			addCriterion("stage_start is not null");
			return (Criteria) this;
			}

		public Criteria andStageStartEqualTo(Short value)
			{
			addCriterion("stage_start =", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartNotEqualTo(Short value)
			{
			addCriterion("stage_start <>", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartGreaterThan(Short value)
			{
			addCriterion("stage_start >", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartGreaterThanOrEqualTo(Short value)
			{
			addCriterion("stage_start >=", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartLessThan(Short value)
			{
			addCriterion("stage_start <", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartLessThanOrEqualTo(Short value)
			{
			addCriterion("stage_start <=", value, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartIn(List<Short> values)
			{
			addCriterion("stage_start in", values, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartNotIn(List<Short> values)
			{
			addCriterion("stage_start not in", values, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartBetween(Short value1, Short value2)
			{
			addCriterion("stage_start between", value1, value2, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageStartNotBetween(Short value1, Short value2)
			{
			addCriterion("stage_start not between", value1, value2, "stageStart");
			return (Criteria) this;
			}

		public Criteria andStageEndIsNull()
			{
			addCriterion("stage_end is null");
			return (Criteria) this;
			}

		public Criteria andStageEndIsNotNull()
			{
			addCriterion("stage_end is not null");
			return (Criteria) this;
			}

		public Criteria andStageEndEqualTo(Short value)
			{
			addCriterion("stage_end =", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndNotEqualTo(Short value)
			{
			addCriterion("stage_end <>", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndGreaterThan(Short value)
			{
			addCriterion("stage_end >", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndGreaterThanOrEqualTo(Short value)
			{
			addCriterion("stage_end >=", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndLessThan(Short value)
			{
			addCriterion("stage_end <", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndLessThanOrEqualTo(Short value)
			{
			addCriterion("stage_end <=", value, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndIn(List<Short> values)
			{
			addCriterion("stage_end in", values, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndNotIn(List<Short> values)
			{
			addCriterion("stage_end not in", values, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndBetween(Short value1, Short value2)
			{
			addCriterion("stage_end between", value1, value2, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andStageEndNotBetween(Short value1, Short value2)
			{
			addCriterion("stage_end not between", value1, value2, "stageEnd");
			return (Criteria) this;
			}

		public Criteria andIntervalFIsNull()
			{
			addCriterion("interval_f is null");
			return (Criteria) this;
			}

		public Criteria andIntervalFIsNotNull()
			{
			addCriterion("interval_f is not null");
			return (Criteria) this;
			}

		public Criteria andIntervalFEqualTo(Double value)
			{
			addCriterion("interval_f =", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFNotEqualTo(Double value)
			{
			addCriterion("interval_f <>", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFGreaterThan(Double value)
			{
			addCriterion("interval_f >", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFGreaterThanOrEqualTo(Double value)
			{
			addCriterion("interval_f >=", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFLessThan(Double value)
			{
			addCriterion("interval_f <", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFLessThanOrEqualTo(Double value)
			{
			addCriterion("interval_f <=", value, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFIn(List<Double> values)
			{
			addCriterion("interval_f in", values, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFNotIn(List<Double> values)
			{
			addCriterion("interval_f not in", values, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFBetween(Double value1, Double value2)
			{
			addCriterion("interval_f between", value1, value2, "intervalF");
			return (Criteria) this;
			}

		public Criteria andIntervalFNotBetween(Double value1, Double value2)
			{
			addCriterion("interval_f not between", value1, value2, "intervalF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFIsNull()
			{
			addCriterion("accumulated_f is null");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFIsNotNull()
			{
			addCriterion("accumulated_f is not null");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFEqualTo(Double value)
			{
			addCriterion("accumulated_f =", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFNotEqualTo(Double value)
			{
			addCriterion("accumulated_f <>", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFGreaterThan(Double value)
			{
			addCriterion("accumulated_f >", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFGreaterThanOrEqualTo(Double value)
			{
			addCriterion("accumulated_f >=", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFLessThan(Double value)
			{
			addCriterion("accumulated_f <", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFLessThanOrEqualTo(Double value)
			{
			addCriterion("accumulated_f <=", value, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFIn(List<Double> values)
			{
			addCriterion("accumulated_f in", values, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFNotIn(List<Double> values)
			{
			addCriterion("accumulated_f not in", values, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFBetween(Double value1, Double value2)
			{
			addCriterion("accumulated_f between", value1, value2, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andAccumulatedFNotBetween(Double value1, Double value2)
			{
			addCriterion("accumulated_f not between", value1, value2, "accumulatedF");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNull()
			{
			addCriterion("created_at is null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNotNull()
			{
			addCriterion("created_at is not null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtEqualTo(Date value)
			{
			addCriterion("created_at =", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotEqualTo(Date value)
			{
			addCriterion("created_at <>", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThan(Date value)
			{
			addCriterion("created_at >", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("created_at >=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThan(Date value)
			{
			addCriterion("created_at <", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("created_at <=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIn(List<Date> values)
			{
			addCriterion("created_at in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotIn(List<Date> values)
			{
			addCriterion("created_at not in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtBetween(Date value1, Date value2)
			{
			addCriterion("created_at between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("created_at not between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNull()
			{
			addCriterion("updated_at is null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNotNull()
			{
			addCriterion("updated_at is not null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtEqualTo(Date value)
			{
			addCriterion("updated_at =", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotEqualTo(Date value)
			{
			addCriterion("updated_at <>", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThan(Date value)
			{
			addCriterion("updated_at >", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("updated_at >=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThan(Date value)
			{
			addCriterion("updated_at <", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("updated_at <=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIn(List<Date> values)
			{
			addCriterion("updated_at in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotIn(List<Date> values)
			{
			addCriterion("updated_at not in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtBetween(Date value1, Date value2)
			{
			addCriterion("updated_at between", value1, value2, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("updated_at not between", value1, value2, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andActualDateIsNull()
			{
			addCriterion("actual_date is null");
			return (Criteria) this;
			}

		public Criteria andActualDateIsNotNull()
			{
			addCriterion("actual_date is not null");
			return (Criteria) this;
			}

		public Criteria andActualDateEqualTo(Date value)
			{
			addCriterionForJDBCDate("actual_date =", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateNotEqualTo(Date value)
			{
			addCriterionForJDBCDate("actual_date <>", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateGreaterThan(Date value)
			{
			addCriterionForJDBCDate("actual_date >", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateGreaterThanOrEqualTo(Date value)
			{
			addCriterionForJDBCDate("actual_date >=", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateLessThan(Date value)
			{
			addCriterionForJDBCDate("actual_date <", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateLessThanOrEqualTo(Date value)
			{
			addCriterionForJDBCDate("actual_date <=", value, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateIn(List<Date> values)
			{
			addCriterionForJDBCDate("actual_date in", values, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateNotIn(List<Date> values)
			{
			addCriterionForJDBCDate("actual_date not in", values, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateBetween(Date value1, Date value2)
			{
			addCriterionForJDBCDate("actual_date between", value1, value2, "actualDate");
			return (Criteria) this;
			}

		public Criteria andActualDateNotBetween(Date value1, Date value2)
			{
			addCriterionForJDBCDate("actual_date not between", value1, value2, "actualDate");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_real_growth_f_stage
	 * @mbg.generated
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_real_growth_f_stage
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 03 16:52:08 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}