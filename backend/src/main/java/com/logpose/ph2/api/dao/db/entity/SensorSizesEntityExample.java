package com.logpose.ph2.api.dao.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SensorSizesEntityExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public SensorSizesEntityExample()
		{
		oredCriteria = new ArrayList<>();
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void setOrderByClause(String orderByClause)
		{
		this.orderByClause = orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public String getOrderByClause()
		{
		return orderByClause;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void setDistinct(boolean distinct)
		{
		this.distinct = distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public boolean isDistinct()
		{
		return distinct;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public List<Criteria> getOredCriteria()
		{
		return oredCriteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void or(Criteria criteria)
		{
		oredCriteria.add(criteria);
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public Criteria or()
		{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public Criteria createCriteria()
		{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
			{
			oredCriteria.add(criteria);
			}
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected Criteria createCriteriaInternal()
		{
		Criteria criteria = new Criteria();
		return criteria;
		}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public void clear()
		{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	protected abstract static class GeneratedCriteria
		{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
			{
			super();
			criteria = new ArrayList<>();
			}

		public boolean isValid()
			{
			return criteria.size() > 0;
			}

		public List<Criterion> getAllCriteria()
			{
			return criteria;
			}

		public List<Criterion> getCriteria()
			{
			return criteria;
			}

		protected void addCriterion(String condition)
			{
			if (condition == null)
				{
				throw new RuntimeException("Value for condition cannot be null");
				}
			criteria.add(new Criterion(condition));
			}

		protected void addCriterion(String condition, Object value, String property)
			{
			if (value == null)
				{
				throw new RuntimeException("Value for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value));
			}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
			{
			if (value1 == null || value2 == null)
				{
				throw new RuntimeException("Between values for " + property + " cannot be null");
				}
			criteria.add(new Criterion(condition, value1, value2));
			}

		public Criteria andIdIsNull()
			{
			addCriterion("id is null");
			return (Criteria) this;
			}

		public Criteria andIdIsNotNull()
			{
			addCriterion("id is not null");
			return (Criteria) this;
			}

		public Criteria andIdEqualTo(Long value)
			{
			addCriterion("id =", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotEqualTo(Long value)
			{
			addCriterion("id <>", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThan(Long value)
			{
			addCriterion("id >", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdGreaterThanOrEqualTo(Long value)
			{
			addCriterion("id >=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThan(Long value)
			{
			addCriterion("id <", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdLessThanOrEqualTo(Long value)
			{
			addCriterion("id <=", value, "id");
			return (Criteria) this;
			}

		public Criteria andIdIn(List<Long> values)
			{
			addCriterion("id in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotIn(List<Long> values)
			{
			addCriterion("id not in", values, "id");
			return (Criteria) this;
			}

		public Criteria andIdBetween(Long value1, Long value2)
			{
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andIdNotBetween(Long value1, Long value2)
			{
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
			}

		public Criteria andSizeIsNull()
			{
			addCriterion("size is null");
			return (Criteria) this;
			}

		public Criteria andSizeIsNotNull()
			{
			addCriterion("size is not null");
			return (Criteria) this;
			}

		public Criteria andSizeEqualTo(Integer value)
			{
			addCriterion("size =", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeNotEqualTo(Integer value)
			{
			addCriterion("size <>", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeGreaterThan(Integer value)
			{
			addCriterion("size >", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeGreaterThanOrEqualTo(Integer value)
			{
			addCriterion("size >=", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeLessThan(Integer value)
			{
			addCriterion("size <", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeLessThanOrEqualTo(Integer value)
			{
			addCriterion("size <=", value, "size");
			return (Criteria) this;
			}

		public Criteria andSizeIn(List<Integer> values)
			{
			addCriterion("size in", values, "size");
			return (Criteria) this;
			}

		public Criteria andSizeNotIn(List<Integer> values)
			{
			addCriterion("size not in", values, "size");
			return (Criteria) this;
			}

		public Criteria andSizeBetween(Integer value1, Integer value2)
			{
			addCriterion("size between", value1, value2, "size");
			return (Criteria) this;
			}

		public Criteria andSizeNotBetween(Integer value1, Integer value2)
			{
			addCriterion("size not between", value1, value2, "size");
			return (Criteria) this;
			}

		public Criteria andDxdIsNull()
			{
			addCriterion("dxd is null");
			return (Criteria) this;
			}

		public Criteria andDxdIsNotNull()
			{
			addCriterion("dxd is not null");
			return (Criteria) this;
			}

		public Criteria andDxdEqualTo(Double value)
			{
			addCriterion("dxd =", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdNotEqualTo(Double value)
			{
			addCriterion("dxd <>", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdGreaterThan(Double value)
			{
			addCriterion("dxd >", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdGreaterThanOrEqualTo(Double value)
			{
			addCriterion("dxd >=", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdLessThan(Double value)
			{
			addCriterion("dxd <", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdLessThanOrEqualTo(Double value)
			{
			addCriterion("dxd <=", value, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdIn(List<Double> values)
			{
			addCriterion("dxd in", values, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdNotIn(List<Double> values)
			{
			addCriterion("dxd not in", values, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdBetween(Double value1, Double value2)
			{
			addCriterion("dxd between", value1, value2, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxdNotBetween(Double value1, Double value2)
			{
			addCriterion("dxd not between", value1, value2, "dxd");
			return (Criteria) this;
			}

		public Criteria andDxuIsNull()
			{
			addCriterion("dxu is null");
			return (Criteria) this;
			}

		public Criteria andDxuIsNotNull()
			{
			addCriterion("dxu is not null");
			return (Criteria) this;
			}

		public Criteria andDxuEqualTo(Double value)
			{
			addCriterion("dxu =", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuNotEqualTo(Double value)
			{
			addCriterion("dxu <>", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuGreaterThan(Double value)
			{
			addCriterion("dxu >", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuGreaterThanOrEqualTo(Double value)
			{
			addCriterion("dxu >=", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuLessThan(Double value)
			{
			addCriterion("dxu <", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuLessThanOrEqualTo(Double value)
			{
			addCriterion("dxu <=", value, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuIn(List<Double> values)
			{
			addCriterion("dxu in", values, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuNotIn(List<Double> values)
			{
			addCriterion("dxu not in", values, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuBetween(Double value1, Double value2)
			{
			addCriterion("dxu between", value1, value2, "dxu");
			return (Criteria) this;
			}

		public Criteria andDxuNotBetween(Double value1, Double value2)
			{
			addCriterion("dxu not between", value1, value2, "dxu");
			return (Criteria) this;
			}

		public Criteria andDtIsNull()
			{
			addCriterion("dt is null");
			return (Criteria) this;
			}

		public Criteria andDtIsNotNull()
			{
			addCriterion("dt is not null");
			return (Criteria) this;
			}

		public Criteria andDtEqualTo(Double value)
			{
			addCriterion("dt =", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtNotEqualTo(Double value)
			{
			addCriterion("dt <>", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtGreaterThan(Double value)
			{
			addCriterion("dt >", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtGreaterThanOrEqualTo(Double value)
			{
			addCriterion("dt >=", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtLessThan(Double value)
			{
			addCriterion("dt <", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtLessThanOrEqualTo(Double value)
			{
			addCriterion("dt <=", value, "dt");
			return (Criteria) this;
			}

		public Criteria andDtIn(List<Double> values)
			{
			addCriterion("dt in", values, "dt");
			return (Criteria) this;
			}

		public Criteria andDtNotIn(List<Double> values)
			{
			addCriterion("dt not in", values, "dt");
			return (Criteria) this;
			}

		public Criteria andDtBetween(Double value1, Double value2)
			{
			addCriterion("dt between", value1, value2, "dt");
			return (Criteria) this;
			}

		public Criteria andDtNotBetween(Double value1, Double value2)
			{
			addCriterion("dt not between", value1, value2, "dt");
			return (Criteria) this;
			}

		public Criteria andRsIsNull()
			{
			addCriterion("rs is null");
			return (Criteria) this;
			}

		public Criteria andRsIsNotNull()
			{
			addCriterion("rs is not null");
			return (Criteria) this;
			}

		public Criteria andRsEqualTo(Integer value)
			{
			addCriterion("rs =", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsNotEqualTo(Integer value)
			{
			addCriterion("rs <>", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsGreaterThan(Integer value)
			{
			addCriterion("rs >", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsGreaterThanOrEqualTo(Integer value)
			{
			addCriterion("rs >=", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsLessThan(Integer value)
			{
			addCriterion("rs <", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsLessThanOrEqualTo(Integer value)
			{
			addCriterion("rs <=", value, "rs");
			return (Criteria) this;
			}

		public Criteria andRsIn(List<Integer> values)
			{
			addCriterion("rs in", values, "rs");
			return (Criteria) this;
			}

		public Criteria andRsNotIn(List<Integer> values)
			{
			addCriterion("rs not in", values, "rs");
			return (Criteria) this;
			}

		public Criteria andRsBetween(Integer value1, Integer value2)
			{
			addCriterion("rs between", value1, value2, "rs");
			return (Criteria) this;
			}

		public Criteria andRsNotBetween(Integer value1, Integer value2)
			{
			addCriterion("rs not between", value1, value2, "rs");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNull()
			{
			addCriterion("created_at is null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIsNotNull()
			{
			addCriterion("created_at is not null");
			return (Criteria) this;
			}

		public Criteria andCreatedAtEqualTo(Date value)
			{
			addCriterion("created_at =", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotEqualTo(Date value)
			{
			addCriterion("created_at <>", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThan(Date value)
			{
			addCriterion("created_at >", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("created_at >=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThan(Date value)
			{
			addCriterion("created_at <", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("created_at <=", value, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtIn(List<Date> values)
			{
			addCriterion("created_at in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotIn(List<Date> values)
			{
			addCriterion("created_at not in", values, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtBetween(Date value1, Date value2)
			{
			addCriterion("created_at between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andCreatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("created_at not between", value1, value2, "createdAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNull()
			{
			addCriterion("updated_at is null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIsNotNull()
			{
			addCriterion("updated_at is not null");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtEqualTo(Date value)
			{
			addCriterion("updated_at =", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotEqualTo(Date value)
			{
			addCriterion("updated_at <>", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThan(Date value)
			{
			addCriterion("updated_at >", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value)
			{
			addCriterion("updated_at >=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThan(Date value)
			{
			addCriterion("updated_at <", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtLessThanOrEqualTo(Date value)
			{
			addCriterion("updated_at <=", value, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtIn(List<Date> values)
			{
			addCriterion("updated_at in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotIn(List<Date> values)
			{
			addCriterion("updated_at not in", values, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtBetween(Date value1, Date value2)
			{
			addCriterion("updated_at between", value1, value2, "updatedAt");
			return (Criteria) this;
			}

		public Criteria andUpdatedAtNotBetween(Date value1, Date value2)
			{
			addCriterion("updated_at not between", value1, value2, "updatedAt");
			return (Criteria) this;
			}
		}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table ph2_sensor_sizes
	 * @mbg.generated  Sat Jul 15 16:35:56 JST 2023
	 */
	public static class Criterion
		{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
			{
			return condition;
			}

		public Object getValue()
			{
			return value;
			}

		public Object getSecondValue()
			{
			return secondValue;
			}

		public boolean isNoValue()
			{
			return noValue;
			}

		public boolean isSingleValue()
			{
			return singleValue;
			}

		public boolean isBetweenValue()
			{
			return betweenValue;
			}

		public boolean isListValue()
			{
			return listValue;
			}

		public String getTypeHandler()
			{
			return typeHandler;
			}

		protected Criterion(String condition)
			{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
			}

		protected Criterion(String condition, Object value, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
				{
				this.listValue = true;
				}
			else
				{
				this.singleValue = true;
				}
			}

		protected Criterion(String condition, Object value)
			{
			this(condition, value, null);
			}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
			{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
			}

		protected Criterion(String condition, Object value, Object secondValue)
			{
			this(condition, value, secondValue, null);
			}
		}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ph2_sensor_sizes
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 03 16:36:11 JST 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}