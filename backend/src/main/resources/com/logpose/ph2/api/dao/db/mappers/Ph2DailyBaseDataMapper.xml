<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.logpose.ph2.api.dao.db.mappers.Ph2DailyBaseDataMapper">
  <resultMap id="BaseResultMap" type="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="day_id" jdbcType="BIGINT" property="dayId" />
    <result column="tm" jdbcType="REAL" property="tm" />
    <result column="average" jdbcType="REAL" property="average" />
    <result column="cdd" jdbcType="DOUBLE" property="cdd" />
    <result column="par" jdbcType="DOUBLE" property="par" />
    <result column="sun_time" jdbcType="BIGINT" property="sunTime" />
    <result column="raw_cdd" jdbcType="DOUBLE" property="rawCdd" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    day_id, tm, average, cdd, par, sun_time, raw_cdd
  </sql>
  <select id="selectByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ph2_daily_base_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ph2_daily_base_data
    where day_id = #{dayId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ph2_daily_base_data
    where day_id = #{dayId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ph2_daily_base_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ph2_daily_base_data (day_id, tm, average, 
      cdd, par, sun_time, raw_cdd
      )
    values (#{dayId,jdbcType=BIGINT}, #{tm,jdbcType=REAL}, #{average,jdbcType=REAL}, 
      #{cdd,jdbcType=DOUBLE}, #{par,jdbcType=DOUBLE}, #{sunTime,jdbcType=BIGINT}, #{rawCdd,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ph2_daily_base_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dayId != null">
        day_id,
      </if>
      <if test="tm != null">
        tm,
      </if>
      <if test="average != null">
        average,
      </if>
      <if test="cdd != null">
        cdd,
      </if>
      <if test="par != null">
        par,
      </if>
      <if test="sunTime != null">
        sun_time,
      </if>
      <if test="rawCdd != null">
        raw_cdd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dayId != null">
        #{dayId,jdbcType=BIGINT},
      </if>
      <if test="tm != null">
        #{tm,jdbcType=REAL},
      </if>
      <if test="average != null">
        #{average,jdbcType=REAL},
      </if>
      <if test="cdd != null">
        #{cdd,jdbcType=DOUBLE},
      </if>
      <if test="par != null">
        #{par,jdbcType=DOUBLE},
      </if>
      <if test="sunTime != null">
        #{sunTime,jdbcType=BIGINT},
      </if>
      <if test="rawCdd != null">
        #{rawCdd,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ph2_daily_base_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_daily_base_data
    <set>
      <if test="row.dayId != null">
        day_id = #{row.dayId,jdbcType=BIGINT},
      </if>
      <if test="row.tm != null">
        tm = #{row.tm,jdbcType=REAL},
      </if>
      <if test="row.average != null">
        average = #{row.average,jdbcType=REAL},
      </if>
      <if test="row.cdd != null">
        cdd = #{row.cdd,jdbcType=DOUBLE},
      </if>
      <if test="row.par != null">
        par = #{row.par,jdbcType=DOUBLE},
      </if>
      <if test="row.sunTime != null">
        sun_time = #{row.sunTime,jdbcType=BIGINT},
      </if>
      <if test="row.rawCdd != null">
        raw_cdd = #{row.rawCdd,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_daily_base_data
    set day_id = #{row.dayId,jdbcType=BIGINT},
      tm = #{row.tm,jdbcType=REAL},
      average = #{row.average,jdbcType=REAL},
      cdd = #{row.cdd,jdbcType=DOUBLE},
      par = #{row.par,jdbcType=DOUBLE},
      sun_time = #{row.sunTime,jdbcType=BIGINT},
      raw_cdd = #{row.rawCdd,jdbcType=DOUBLE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_daily_base_data
    <set>
      <if test="tm != null">
        tm = #{tm,jdbcType=REAL},
      </if>
      <if test="average != null">
        average = #{average,jdbcType=REAL},
      </if>
      <if test="cdd != null">
        cdd = #{cdd,jdbcType=DOUBLE},
      </if>
      <if test="par != null">
        par = #{par,jdbcType=DOUBLE},
      </if>
      <if test="sunTime != null">
        sun_time = #{sunTime,jdbcType=BIGINT},
      </if>
      <if test="rawCdd != null">
        raw_cdd = #{rawCdd,jdbcType=DOUBLE},
      </if>
    </set>
    where day_id = #{dayId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2DailyBaseDataEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_daily_base_data
    set tm = #{tm,jdbcType=REAL},
      average = #{average,jdbcType=REAL},
      cdd = #{cdd,jdbcType=DOUBLE},
      par = #{par,jdbcType=DOUBLE},
      sun_time = #{sunTime,jdbcType=BIGINT},
      raw_cdd = #{rawCdd,jdbcType=DOUBLE}
    where day_id = #{dayId,jdbcType=BIGINT}
  </update>
  
   <select id="countEffectiveData" resultType="java.lang.Long">
		SELECT
			count(ph2_device_day.*)
		FROM
			ph2_device_day
		JOIN ph2_daily_base_data ON ph2_device_day.id = ph2_daily_base_data.day_id 
		WHERE
			ph2_device_day.device_id = #{deviceId}
			AND ph2_device_day.date =#{date}
   </select>
   
  <resultMap id="ExtendResultMap" type="com.logpose.ph2.api.dao.db.entity.joined.ExtendDailyBaseDataEntity">
    <result column="day_id" jdbcType="BIGINT" property="dayId" />
    <result column="tm" jdbcType="REAL" property="tm" />
    <result column="average" jdbcType="REAL" property="average" />
    <result column="cdd" jdbcType="DOUBLE" property="cdd" />
    <result column="par" jdbcType="DOUBLE" property="par" />
    <result column="sun_time" jdbcType="BIGINT" property="sunTime" />
	<result column="lapse_day" jdbcType="SMALLINT" property="lapseDay" />
    <result column="raw_cdd" jdbcType="DOUBLE" property="rawCdd" />
  </resultMap>

  <select id="selectOldData" resultMap="ExtendResultMap">
   	select
   	    dd.lapse_day, bd.day_id, bd.tm, bd.average, bd.cdd, bd.par, bd.sun_time, bd.raw_cdd
   	 from
   	 	ph2_device_day dd
	join
   		ph2_daily_base_data bd on dd.id=bd.day_id
   	where
   		dd.device_id = #{deviceId}
   		and
   		dd.year = #{year}
   		and
   		dd.has_real = true
   		and
   		dd.lapse_day <![CDATA[<]]> #{lapseDay}
   		order by dd.lapse_day
   </select>
     <select id="selectLastYearData" resultMap="ExtendResultMap">
   	select
   	    dd.lapse_day, bd.day_id, bd.tm, bd.average, bd.cdd, bd.par, bd.sun_time, bd.raw_cdd
   	 from
   	 	ph2_device_day dd
	join
   		ph2_daily_base_data bd on dd.id=bd.day_id
   	where
   		dd.device_id = #{deviceId}
   		and
   		dd.year = #{year}
   		and
   		dd.has_real = true
   		and
   		dd.lapse_day <![CDATA[>=]]> #{start}
   		and
   		dd.lapse_day <![CDATA[<=]]> #{end}
   		order by dd.lapse_day
   </select>
	<insert id="multiRowInsert">
   	 insert into ph2_daily_base_data (day_id, tm, average, cdd, par, sun_time, raw_cdd)
		values
		<foreach collection="targets" item="item" separator=",">
     (#{item.dayId,jdbcType=BIGINT}, #{item.tm,jdbcType=REAL}, #{item.average,jdbcType=REAL}, 
      #{item.cdd,jdbcType=DOUBLE}, #{item.par,jdbcType=DOUBLE}, #{item.sunTime,jdbcType=BIGINT},
      #{item.rawCdd,jdbcType=DOUBLE}
      )
		</foreach>
	</insert>
</mapper>