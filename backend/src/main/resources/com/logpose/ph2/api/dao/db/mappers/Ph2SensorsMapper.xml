<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.logpose.ph2.api.dao.db.mappers.Ph2SensorsMapper">
  <resultMap id="BaseResultMap" type="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="sensor_size_id" jdbcType="BIGINT" property="sensorSizeId" />
    <result column="sensor_content_id" jdbcType="BIGINT" property="sensorContentId" />
    <result column="plant" jdbcType="VARCHAR" property="plant" />
    <result column="kst" jdbcType="DOUBLE" property="kst" />
    <result column="sm" jdbcType="DOUBLE" property="sm" />
    <result column="lf" jdbcType="DOUBLE" property="lf" />
    <result column="cb" jdbcType="DOUBLE" property="cb" />
    <result column="sensor_model_id" jdbcType="BIGINT" property="sensorModelId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, device_id, channel, sensor_size_id, sensor_content_id, plant, kst, sm, lf, cb, 
    sensor_model_id, name, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ph2_sensors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from ph2_sensors
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ph2_sensors
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntityExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ph2_sensors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ph2_sensors (id, device_id, channel, 
      sensor_size_id, sensor_content_id, plant, 
      kst, sm, lf, cb, 
      sensor_model_id, name, created_at, 
      updated_at)
    values (#{id,jdbcType=BIGINT}, #{deviceId,jdbcType=BIGINT}, #{channel,jdbcType=INTEGER}, 
      #{sensorSizeId,jdbcType=BIGINT}, #{sensorContentId,jdbcType=BIGINT}, #{plant,jdbcType=VARCHAR}, 
      #{kst,jdbcType=DOUBLE}, #{sm,jdbcType=DOUBLE}, #{lf,jdbcType=DOUBLE}, #{cb,jdbcType=DOUBLE}, 
      #{sensorModelId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ph2_sensors
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="channel != null">
        channel,
      </if>
      <if test="sensorSizeId != null">
        sensor_size_id,
      </if>
      <if test="sensorContentId != null">
        sensor_content_id,
      </if>
      <if test="plant != null">
        plant,
      </if>
      <if test="kst != null">
        kst,
      </if>
      <if test="sm != null">
        sm,
      </if>
      <if test="lf != null">
        lf,
      </if>
      <if test="cb != null">
        cb,
      </if>
      <if test="sensorModelId != null">
        sensor_model_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="channel != null">
        #{channel,jdbcType=INTEGER},
      </if>
      <if test="sensorSizeId != null">
        #{sensorSizeId,jdbcType=BIGINT},
      </if>
      <if test="sensorContentId != null">
        #{sensorContentId,jdbcType=BIGINT},
      </if>
      <if test="plant != null">
        #{plant,jdbcType=VARCHAR},
      </if>
      <if test="kst != null">
        #{kst,jdbcType=DOUBLE},
      </if>
      <if test="sm != null">
        #{sm,jdbcType=DOUBLE},
      </if>
      <if test="lf != null">
        #{lf,jdbcType=DOUBLE},
      </if>
      <if test="cb != null">
        #{cb,jdbcType=DOUBLE},
      </if>
      <if test="sensorModelId != null">
        #{sensorModelId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntityExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ph2_sensors
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_sensors
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.deviceId != null">
        device_id = #{row.deviceId,jdbcType=BIGINT},
      </if>
      <if test="row.channel != null">
        channel = #{row.channel,jdbcType=INTEGER},
      </if>
      <if test="row.sensorSizeId != null">
        sensor_size_id = #{row.sensorSizeId,jdbcType=BIGINT},
      </if>
      <if test="row.sensorContentId != null">
        sensor_content_id = #{row.sensorContentId,jdbcType=BIGINT},
      </if>
      <if test="row.plant != null">
        plant = #{row.plant,jdbcType=VARCHAR},
      </if>
      <if test="row.kst != null">
        kst = #{row.kst,jdbcType=DOUBLE},
      </if>
      <if test="row.sm != null">
        sm = #{row.sm,jdbcType=DOUBLE},
      </if>
      <if test="row.lf != null">
        lf = #{row.lf,jdbcType=DOUBLE},
      </if>
      <if test="row.cb != null">
        cb = #{row.cb,jdbcType=DOUBLE},
      </if>
      <if test="row.sensorModelId != null">
        sensor_model_id = #{row.sensorModelId,jdbcType=BIGINT},
      </if>
      <if test="row.name != null">
        name = #{row.name,jdbcType=VARCHAR},
      </if>
      <if test="row.createdAt != null">
        created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedAt != null">
        updated_at = #{row.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_sensors
    set id = #{row.id,jdbcType=BIGINT},
      device_id = #{row.deviceId,jdbcType=BIGINT},
      channel = #{row.channel,jdbcType=INTEGER},
      sensor_size_id = #{row.sensorSizeId,jdbcType=BIGINT},
      sensor_content_id = #{row.sensorContentId,jdbcType=BIGINT},
      plant = #{row.plant,jdbcType=VARCHAR},
      kst = #{row.kst,jdbcType=DOUBLE},
      sm = #{row.sm,jdbcType=DOUBLE},
      lf = #{row.lf,jdbcType=DOUBLE},
      cb = #{row.cb,jdbcType=DOUBLE},
      sensor_model_id = #{row.sensorModelId,jdbcType=BIGINT},
      name = #{row.name,jdbcType=VARCHAR},
      created_at = #{row.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{row.updatedAt,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_sensors
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="channel != null">
        channel = #{channel,jdbcType=INTEGER},
      </if>
      <if test="sensorSizeId != null">
        sensor_size_id = #{sensorSizeId,jdbcType=BIGINT},
      </if>
      <if test="sensorContentId != null">
        sensor_content_id = #{sensorContentId,jdbcType=BIGINT},
      </if>
      <if test="plant != null">
        plant = #{plant,jdbcType=VARCHAR},
      </if>
      <if test="kst != null">
        kst = #{kst,jdbcType=DOUBLE},
      </if>
      <if test="sm != null">
        sm = #{sm,jdbcType=DOUBLE},
      </if>
      <if test="lf != null">
        lf = #{lf,jdbcType=DOUBLE},
      </if>
      <if test="cb != null">
        cb = #{cb,jdbcType=DOUBLE},
      </if>
      <if test="sensorModelId != null">
        sensor_model_id = #{sensorModelId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.logpose.ph2.api.dao.db.entity.Ph2SensorsEntity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ph2_sensors
    set device_id = #{deviceId,jdbcType=BIGINT},
      channel = #{channel,jdbcType=INTEGER},
      sensor_size_id = #{sensorSizeId,jdbcType=BIGINT},
      sensor_content_id = #{sensorContentId,jdbcType=BIGINT},
      plant = #{plant,jdbcType=VARCHAR},
      kst = #{kst,jdbcType=DOUBLE},
      sm = #{sm,jdbcType=DOUBLE},
      lf = #{lf,jdbcType=DOUBLE},
      cb = #{cb,jdbcType=DOUBLE},
      sensor_model_id = #{sensorModelId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>